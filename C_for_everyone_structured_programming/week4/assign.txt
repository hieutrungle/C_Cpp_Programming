#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

//Open the file, get the first position information and update the size information to be used by array

void get_array_size(FILE *f, int *size)
{
    //position the pointer to the file beginning
    rewind(f);

    //get first number to use it as array size
    fscanf(f, "%d", size);
}
/*
function purpose: 
	Get the data and add it in the data array
	Respect the size defined in the first element in array. 
	If the file has more elements than defined in first position, gets only n first elements
*/
void read_data(FILE *ptr, int d[], int size)
{
    int index = 0;

    //the while starts from second element where the pointer is
    while (index < size && fscanf(ptr, "%d", &d[index]) == 1)
    {
        index++;
    }
}

void print_data(int d[], int size, FILE *ofp)
{
    int i;
    for (i = 0; i < size; i++)
    {
        printf("%d\t", d[i]);
        // Write values to output file
        fprintf(ofp, "%d\t", d[i]);
        if ((i + 1) % 10 == 0)
        {
            printf("\n");
            fprintf(ofp, "\n");
        }
    }
}

double average(int d[], int size)
{
    int i;
    int sum = 0.0;
    for (i = 0; i < size; i++)
    {
        sum += d[i];
    }
    return (sum / (float)size);
}

int get_maximum(int d[], int size)
{
    //set to a small value
    int max = -43142;
    //starts for in second element
    for (int i = 0; i < size; i++)
    {
        //if this element is greater than previous element, update max var;
        if (d[i] > max)
        {
            max = d[i];
        }
    }
    return max;
}

//check if array is empty, it will warn the program to break
bool isArrayEmpty(int size)
{
    if (size == 0)
    {
        return true;
    }
    return false;
}
int main()
{
    int arr_size;
    int *ptr_size = &arr_size;

    FILE *ifp, *ofp;

    ifp = fopen("input.txt", "r");
    ofp = fopen("answer.txt", "w");
    get_array_size(ifp, ptr_size);

    //if first value got is 0, exit the program.
    if (isArrayEmpty(arr_size))
    {
        exit(1);
    }

    int data[arr_size];

    read_data(ifp, data, arr_size);

    print_data(data, arr_size, ofp);
    printf("\n");
    printf("\naverage score was %.2f", average(data, arr_size));
    printf("\nmaximum number defined was %d", get_maximum(data, arr_size));
    printf("\n\n");

    //file print

    fprintf(ofp,"\n\n average score was %.2f\n", average(data, arr_size));
    fprintf(ofp,"\n maximum number defined was %d", get_maximum(data, arr_size));

    fclose(ifp);
    fclose(ofp);
    return 0;
}